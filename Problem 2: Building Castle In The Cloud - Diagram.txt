## **Architecture Overview**

The system is designed to handle **500 requests per second** with a **p99 response time of <100ms** while being **highly available**, **scalable**, and **cost-effective**. The architecture leverages **AWS services** and follows a **microservices** approach to ensure modularity and fault tolerance.


### **Key Features Included**
1. **User Authentication and Authorization**.
2. **Order Placement and Matching**.
3. **Real-Time Market Data Streaming**.
4. **Wallet Management**.
5. **High Availability and Fault Tolerance**.


## **Diagram**

```
+-------------------+       +-------------------+       +-------------------+
|                   |       |                   |       |                   |
|   Frontend        |<----->|   API Gateway     |<----->|   Order Matching  |
|   (React/Next.js) |       |   (AWS API GW)    |       |   Engine          |
|                   |       |                   |       |   (Custom C++)    |
+-------------------+       +-------------------+       +-------------------+
                                |       |                       |
                                |       |                       |
+-------------------+       +---v-------+-------+       +-------------------+
|                   |       |                   |       |                   |
|   User Management |       |   Message Queue   |       |   Market Data     |
|   (AWS Cognito)   |<------|   (Amazon SQS)    |------>|   Service         |
|                   |       |                   |       |   (WebSockets)    |
+-------------------+       +-------------------+       +-------------------+
                                |       |
+-------------------+       +---v-------+-------+       +-------------------+
|                   |       |                   |       |                   |
|   Wallet Service  |       |   Cache Layer     |       |   Database Layer  |
|   (Node.js)       |<------|   (Amazon ElastiCache)|<->|   (Aurora PostgreSQL)|
|                   |       |                   |       |   (DynamoDB)      |
+-------------------+       +-------------------+       +-------------------+
```
